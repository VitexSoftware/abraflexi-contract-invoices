<?php

namespace Test\Ease\Logger;

use \Ease\Logger\Regent;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-11-28 at 21:17:33.
 */
class RegentTest extends \Test\Ease\AtomTest
{
    /**
     * @var Regent
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->object = new Regent();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
        
    }

    public function testConstructor()
    {
        $classname = get_class($this->object);

        // Get mock, without the constructor being called
        $mock = $this->getMockBuilder($classname)
            ->disableOriginalConstructor()
            ->getMockForAbstractClass();
        $mock->__construct();
        $mock->__construct('syslog');
        $mock->__construct('console');
        $mock->__construct('file');
        $mock->__construct('std');
        $mock->__construct('email');
        $mock->__construct('eventlog');
        $mock->__construct('\Ease\Logger\ToFile');
        
        $this->assertEquals(['memory','syslog', 'console', 'file', 'std', 'email', 'eventlog', '\Ease\Logger\ToFile'],
            array_keys($mock->loggers));
    }

    /**
     * @covers Ease\Logger\Regent::takeMessage
     */
    public function testTakeMessage()
    {
        $this->assertEmpty($this->object->takeMessage());
    }

    /**
     * @covers Ease\Logger\Regent::addToLog
     * @covers Ease\Logger\Loggingable::addToLog
     */
    public function testAddToLog()
    {
        $this->object->addToLog(get_class($this), 'Unit Test');
        $this->object->addToLog(get_class($this), 'Code Coverage', 'debug');
        $this->assertEquals([], $this->object->getStatusMessages(true));
    }

    /**
     * @covers Ease\Logger\Regent::addStatusObject
     */
    public function testAddStatusObject()
    {
        $message = 'Regent::addStatusObject Unit Test';
        $this->object->addStatusObject(new \Ease\Logger\Message($message),
            'info');
        $stm = $this->object->getStatusMessages(true);
        $this->assertTrue( array_key_exists( 'info', $stm) && current($stm['info']) == $message  );
    }

    /**
     * @covers Ease\Logger\Regent::singleton
     */
    public function testSingleton()
    {
        
        $this->assertInstanceOf('Ease\Logger\Regent', Regent::singleton());
    }
}
